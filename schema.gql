# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Article {
  bio: String!
  comment: [Comment!]!
  content: String!
  createdAt: DateTime!
  favoriteCount: Float!
  id: Float!
  name: String!
  post: [Post!]!
  slug: String!
  tagList: String!
  updatedAt: DateTime!
  user: [User!]!
}

type AuthResponse {
  access_token: String!
  user: User!
}

type CategoryFood {
  createdAt: DateTime!
  id: Float!
  image: String!
  product_food: [ProductFood!]!
  title: String!
  updatedAt: DateTime!
}

type Comment {
  articles: Article!
  createdAt: DateTime!
  id: Float!
  post: Post!
  text: String!
  updatedAt: DateTime!
  user: User!
}

input CreateCategoryInput {
  image: String!
  title: String!
}

input CreateOrderInput {
  product_id: Float!
  user_id: Float!
}

input CreateProductInput {
  category_id: Float!
  description: String!
  image: String!
  price: Float!
  title: String!
}

"""
The javascript `Date` as string. Type represents date and time as the ISO Date string.
"""
scalar DateTime

type Keys {
  createdAt: DateTime!
  id: Float!
  publicKey: String!
  refreshToken: String!
  updatedAt: DateTime!
  user_food: UserFood!
}

input LoginInput {
  password: String!
  username: String!
}

type Mutation {
  CreateCategory(data: CreateCategoryInput!): CategoryFood!
  createOrder(data: CreateOrderInput!): OrderFood!
  createProduct(data: CreateProductInput!): ProductFood!
  signup(data: SigninInput!): UserFood!
}

type OrderFood {
  id: Float!
  product_food: ProductFood!
  user_food: UserFood!
}

type Post {
  articles: Article!
  comments: Comment!
  content: String!
  createdAt: DateTime!
  excerpt: String!
  featuredImage: String!
  id: Float!
  slug: String!
  Stages: String!
  title: String!
  updatedAt: DateTime!
  user: User!
}

type ProductFood {
  category_food: CategoryFood!
  createdAt: DateTime!
  description: String!
  id: Float!
  image: String!
  order_food: [OrderFood!]!
  price: Float!
  title: String!
  updatedAt: DateTime!
}

type Query {
  getCategories: [CategoryFood!]!
  getProducts: [ProductFood!]!
  login(data: LoginInput!): AuthResponse!
}

input SigninInput {
  password: String!
  username: String!
}

type User {
  artcles: Article!
  comments: Comment!
  createdAt: DateTime!
  email: String!
  id: Float!
  password: String!
  post: [Post!]!
  role: String!
  updatedAt: DateTime!
  username: String!
}

type UserFood {
  createdAt: DateTime!
  email: String!
  id: Float!
  keys: [Keys!]!
  order_food: [OrderFood!]!
  password: String!
  updatedAt: DateTime!
  username: String!
}
